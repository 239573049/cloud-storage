kind: pipeline
name: token
type: docker

platform:
  os: linux
  arch: amd64

steps:
  - name: token:dev
    when:
      branch:
        - master
    image: docker:dind
    environment:
      IMAGE: token:dev
      ASPNETCORE_ENVIRONMENT: Development
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker build -f ./src/token.Web/Dockerfile  -t token:dev .
      
  - name: token-push
    image: docker:dind
    when:
      branch:
        - master
    environment:
      IMAGE: token:dev
      ASPNETCORE_ENVIRONMENT: Development
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: logs
        path: /root/logs/token/logs:/app/logs
    commands:
      - docker stop token:dev && docker rm token:dev
      - docker run -d -p 8000:80 -p 8081:443 --network token -e ASPNETCORE_ENVIRONMENT=Development --restart always --name token token:dev
      
volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
      
---
kind: pipeline
name: after
type: docker

steps:
  - name: notify
    image: docker:dind
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker system prune -f
      
volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

depends_on:
  - token
